{"version":3,"sources":["Components/section/Section.js","Components/statistics/Statistics.js","Components/notification/Notification.js","Components/feedbackOptions/FeedbackOptions.js","App/App.js","index.js"],"names":["Section","title","children","Statistics","justProps","Object","keys","map","label","Notification","StyledList","styled","ul","FeedbackOptions","options","onLeaveFeedback","option","type","id","onClick","App","_ADAM_STATE_","good","neutral","bad","state","handlerOfAll","e","setState","p","target","createOptions","this","total","positivePercentage","o","Component","ReactDOM","render","document","getElementById"],"mappings":"iPAgBeA,MAbf,YAAwD,IAAD,IAArCC,aAAqC,MAA/B,mBAA+B,EAAXC,EAAW,EAAXA,SACxC,OACI,oCACI,6BAAKD,IACJC,MCmBEC,MAvBf,SAAoBC,GAChB,OACI,6BACIC,OAAOC,KAAKF,GAAWG,KACpB,SAAAC,GAAK,OACD,+BACI,6BAAKA,IACL,iCAAOJ,EAAUI,GAAgB,uBAARA,GAAgC,SAFpDA,SCEbC,I,EAAAA,EARf,WACI,OACI,gM,QCAFC,E,MAAWC,EAAOC,GAAR,sFAsBDC,MAjBf,YAAsD,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,gBAC/B,OACI,cAACL,EAAD,UACKI,EAAQP,KAAI,SAAAS,GAAM,OACf,6BACI,wBAAQC,KAAK,SAASC,GAAIF,EAAQG,QAASJ,EAA3C,SAA6DC,KADxDA,SCNJI,E,kDAEjB,aAAc,IAAD,8BACT,gBAIJC,aAAa,CACTC,KAAM,EACNC,QAAS,EACTC,IAAK,GARI,EAWbC,MAXa,eAWH,EAAKJ,cAXF,EAabP,QAAQ,GAbK,EAmBbY,aAAe,SAACC,GACZ,EAAKC,UAAS,SAAAC,GAAC,sBAAKF,EAAEG,OAAOZ,GAAIW,EAAEF,EAAEG,OAAOZ,IAAI,OAlBhD,EAAKJ,QAAQ,EAAKiB,gBAFT,E,iDAeb,WACI,OAAO1B,OAAOC,KAAK0B,KAAKP,S,oBAQ5B,WAAU,IAAD,OAEDQ,EAAM,EACNC,EAAmB,EAQvB,OANAF,KAAKlB,QAAQP,KAAI,SAAA4B,GAAC,OAAEF,GAAO,EAAKR,MAAMU,MAGtCD,EADkB,IAAlBF,KAAKP,MAAMH,KACQ,EACiB,IAAhBU,KAAKP,MAAMH,KAASW,EAGpC,qCACG,cAAC,EAAD,CAAShC,MAAM,+CAAf,SACK,cAAC,EAAD,CAAiBa,QAASkB,KAAKlB,QAASC,gBAAiBiB,KAAKN,iBAEnE,cAAC,EAAD,CAASzB,MAAM,wBAAf,SACc,IAARgC,EACD,cAAC,EAAD,IACA,cAAC,EAAD,2BAAgBD,KAAKP,OAArB,IACAQ,MAAOA,EACPC,mBAAoBA,c,GA/CPE,aCFjCC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a61786e4.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction Section({title=\"Title of Section\", children}) {\n    return (\n        <section>\n            <h2>{title}</h2>\n            {children}\n        </section>\n    )\n}\n\nSection.propTypes = {\n    title: PropTypes.string,\n}\n\nexport default Section\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction Statistics(justProps) {\n    return (\n        <ul>\n           {Object.keys(justProps).map(\n               label=>(\n                   <li key={label}>\n                       <h3>{label}</h3>\n                       <span>{justProps[label]}{label===\"positivePercentage\" && \"%\"}</span>\n                   </li>\n               )\n           )} \n        </ul>\n    )\n}\n\nStatistics.propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positivePercentage: PropTypes.number.isRequired\n}\n\nexport default Statistics\n\n","import React from 'react'\n\nfunction Notification() {\n    return (\n        <h3>\n           Unfortunatelly, nobody has voted yet. Maybe our services are unuseful so nobody don't use it and vote it. But one is definitely true that WE DON'T BUY VOTES!     \n        </h3>\n    )\n}\n\nexport default Notification\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst StyledList=styled.ul`\n    display: flex;\n    justify-content: 'space-around',\n`;\n\nfunction FeedbackOptions({options, onLeaveFeedback}) {\n    return (\n        <StyledList>\n            {options.map(option=>(\n                <li key={option}>\n                    <button type=\"button\" id={option} onClick={onLeaveFeedback}>{option}</button>\n                </li>\n            ))}\n        </StyledList>\n    )\n}\n\nFeedbackOptions.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\n    onLeaveFeedback: PropTypes.func.isRequired,\n}\n\nexport default FeedbackOptions\n\n","import React, { Component } from 'react';\nimport Section from '../Components/section/Section'\nimport Statistics from '../Components/statistics/Statistics';\nimport Notification from '../Components/notification/Notification';\nimport FeedbackOptions from '../Components/feedbackOptions/FeedbackOptions';\n\n\nexport default class App extends Component {\n\n    constructor(){\n        super()\n        this.options=this.createOptions()\n    }\n\n    _ADAM_STATE_={\n        good: 0,\n        neutral: 0,\n        bad: 0\n    }\n    \n    state={...this._ADAM_STATE_};\n\n    options=[]\n\n    createOptions(){\n        return Object.keys(this.state)\n    }\n\n    handlerOfAll = (e)=>{\n        this.setState(p=>({[e.target.id]:p[e.target.id]+1}))\n        \n    }\n\n    render() {    \t\n\n       \tlet total=0\n       \tlet positivePercentage=0\n\n        this.options.map(o=>total+=this.state[o])\n\n        this.state.good===0?\n        positivePercentage=0:\n        positivePercentage=(this.state.good*100/total)\n        \n        return (\n            <>\n               <Section title=\"Buttons to vote (10$ per one, ask Mr. Burke)\">\n                    <FeedbackOptions options={this.options} onLeaveFeedback={this.handlerOfAll}/>\n               </Section>\n               <Section title=\"Incorruptible votes: \">\n                    {total===0 ?\n                    <Notification/>:\n                    <Statistics {...this.state} \n                    total={total} \n                    positivePercentage={positivePercentage}/>}\n               </Section>\n            </>\n        )\n    }\n}\n","import \"./normalize.css\"\nimport \"./globalStyles.css\"\nimport ReactDOM from 'react-dom'\nimport App from \"./App/App\";\n\nReactDOM.render(\n    <App/>,\n    document.getElementById(\"root\")\n)\n"],"sourceRoot":""}